// Version: 1.0.0
type Fee = Nat64;
type Map<K, V> = [var ?([var ?K], [var ?V], [var Nat], [var Nat32])];
type Region__1 = Region;
type Region__2 = Region__1;
type Region__3 = Region__2;
type State = {var fees : Map<Text, Fee>};
type State__1 = State;
type State__10 = {buffer_state : State__9; client_state : State__5};
type State__11 = State__10;
type State__12 =
  {
    var agent_ingress_expiry : Nat;
    var agent_nonce : State__3;
    var agent_read_attempts : Nat
  };
type State__13 =
  {
    var domain : Text;
    var fees : State__1;
    var nonce : State__3;
    var path : Text
  };
type State__14 = State__13;
type State__15 = State__12;
type State__16 = State__15;
type State__2 = {var nonce : Nat};
type State__3 = State__2;
type State__4 = {var client_canister_id : Text; var client_fees : State__1};
type State__5 = State__4;
type State__8 =
  {
    block_size : Nat64;
    blocks : Region__3;
    blocks_per_page : Nat64;
    var capacity : Nat64;
    var next : Nat64;
    page_buffer : Nat64
  };
type State__9 = State__8;
actor {
  stable state :
    {
      agent_state : State__16;
      client_state : State__14;
      manager_state : State__11
    }
};
